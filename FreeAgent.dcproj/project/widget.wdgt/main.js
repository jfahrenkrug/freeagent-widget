/* 
 This file was generated by Dashcode.  
 You may edit this file to customize your widget or web page 
 according to the license.txt file included in the project.
 */

function loadPreferences() {
  FreeAgent.domain = widget.preferenceForKey("domain");
  FreeAgent.email = widget.preferenceForKey("email");
  FreeAgent.password = widget.preferenceForKey("password");
  if (!Timer.running) { 
    Timer.duration = widget.preferenceForKey("unposted-time");
  }
}

function savePreferences() {
  widget.setPreferenceForKey(FreeAgent.domain, "domain");
  widget.setPreferenceForKey(FreeAgent.email, "email");
  widget.setPreferenceForKey(FreeAgent.password, "password");
  widget.setPreferenceForKey(Timer.duration, "unposted-time");
}

//
// Function: load()
// Called by HTML body element's onload event when the widget is ready to start
//
function load()
{
  dashcode.setupParts();
  loadPreferences();
  FreeAgent.prepare();
  GUI.prepare(Timer.duration);
}

//
// Function: remove()
// Called when the widget has been removed from the Dashboard
//
function remove()
{
  // Stop any timers to prevent CPU usage
  // Remove any preferences as needed
  // widget.setPreferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
}

//
// Function: hide()
// Called when the widget has been hidden
//
function hide()
{
  // Stop any timers to prevent CPU usage
  savePreferences();
}

//
// Function: show()
// Called when the widget has been shown
//
function show()
{
  // Restart any timers that were stopped on hide
}

//
// Function: sync()
// Called when the widget has been synchronized with .Mac
//
function sync()
{
  // Retrieve any preference values that you need to be synchronized here
  // Use this for an instance key's value:
  // instancePreferenceValue = widget.preferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
  //
  // Or this for global key's value:
  // globalPreferenceValue = widget.preferenceForKey(null, "your-key");
  loadPreferences();
}

//
// Function: showBack(event)
// Called when the info button is clicked to show the back of the widget
//
// event: onClick event from the info button
//
function showBack(event) {
  var front = document.getElementById("front");
  var back = document.getElementById("back");

  if (window.widget) {
    widget.prepareForTransition("ToBack");
  }

  GUI.showConfiguration();
  
  front.style.display = "none";
  back.style.display = "block";

  if (window.widget) {
    setTimeout('widget.performTransition();', 0);
  }
}

//
// Function: showFront(event)
// Called when the done button is clicked from the back of the widget
//
// event: onClick event from the done button
//
function showFront(event) {
  var front = document.getElementById("front");
  var back = document.getElementById("back");

  if (window.widget) {
    widget.prepareForTransition("ToFront");
  }

  front.style.display="block";
  back.style.display="none";

  GUI.storeConfiguration();
  savePreferences();
  FreeAgent.prepare(); // in case anything has changed

  if (window.widget) {
    setTimeout('widget.performTransition();', 0);
  }
}

if (window.widget) {
  widget.onremove = remove;
  widget.onhide = hide;
  widget.onshow = show;
  widget.onsync = sync;
}

// Handlers for click events
function toggleTimer(event) {
  return Timer.toggle();
}

function postTime(event) {
  FreeAgent.postTime({
    timer: Timer,
    comment: $("#comment").val(),
  })
  Timer.reset();
  $("#comment").val("");
}

function addNewTask(event) {
  $("#newTaskBox").hide();
  if ($("#newTaskName").val() != "") {
    FreeAgent.newTask($("#newTaskName").val());
  }
}

function enterTime(event) {
  $("#customTime").show();
  $("#customTime").focus();
}

function setCustomTime(event) {
  $("#customTime").hide();
  Timer.parse($("#customTime").val());
}

function hideTime(event) {
  if (event.keyCode == 27 || event.keyCode == 13) {
    setCustomTime();
  }
}

// Opening external websites
function visitSite(event) {
  widget.openURL("https://" + FreeAgent.domain + ".freeagentcentral.com/timeslips");
}
function openFreeRange(event) { widget.openURL("http://gofreerange.com"); }
function openLazyatom(event)  { widget.openURL("http://lazyatom.com"); }

function toggleLogger(event) {
  GUI.updateLoggerStatus(Logger.toggle());
}
